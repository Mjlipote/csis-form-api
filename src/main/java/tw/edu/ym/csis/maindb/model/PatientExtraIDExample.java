package tw.edu.ym.csis.maindb.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PatientExtraIDExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    public PatientExtraIDExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPatientidIsNull() {
            addCriterion("PATIENTID is null");
            return (Criteria) this;
        }

        public Criteria andPatientidIsNotNull() {
            addCriterion("PATIENTID is not null");
            return (Criteria) this;
        }

        public Criteria andPatientidEqualTo(Long value) {
            addCriterion("PATIENTID =", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidNotEqualTo(Long value) {
            addCriterion("PATIENTID <>", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidGreaterThan(Long value) {
            addCriterion("PATIENTID >", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidGreaterThanOrEqualTo(Long value) {
            addCriterion("PATIENTID >=", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidLessThan(Long value) {
            addCriterion("PATIENTID <", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidLessThanOrEqualTo(Long value) {
            addCriterion("PATIENTID <=", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidIn(List<Long> values) {
            addCriterion("PATIENTID in", values, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidNotIn(List<Long> values) {
            addCriterion("PATIENTID not in", values, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidBetween(Long value1, Long value2) {
            addCriterion("PATIENTID between", value1, value2, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidNotBetween(Long value1, Long value2) {
            addCriterion("PATIENTID not between", value1, value2, "patientid");
            return (Criteria) this;
        }

        public Criteria andExtraidIsNull() {
            addCriterion("EXTRAID is null");
            return (Criteria) this;
        }

        public Criteria andExtraidIsNotNull() {
            addCriterion("EXTRAID is not null");
            return (Criteria) this;
        }

        public Criteria andExtraidEqualTo(String value) {
            addCriterion("EXTRAID =", value, "extraid");
            return (Criteria) this;
        }

        public Criteria andExtraidNotEqualTo(String value) {
            addCriterion("EXTRAID <>", value, "extraid");
            return (Criteria) this;
        }

        public Criteria andExtraidGreaterThan(String value) {
            addCriterion("EXTRAID >", value, "extraid");
            return (Criteria) this;
        }

        public Criteria andExtraidGreaterThanOrEqualTo(String value) {
            addCriterion("EXTRAID >=", value, "extraid");
            return (Criteria) this;
        }

        public Criteria andExtraidLessThan(String value) {
            addCriterion("EXTRAID <", value, "extraid");
            return (Criteria) this;
        }

        public Criteria andExtraidLessThanOrEqualTo(String value) {
            addCriterion("EXTRAID <=", value, "extraid");
            return (Criteria) this;
        }

        public Criteria andExtraidLike(String value) {
            addCriterion("EXTRAID like", value, "extraid");
            return (Criteria) this;
        }

        public Criteria andExtraidNotLike(String value) {
            addCriterion("EXTRAID not like", value, "extraid");
            return (Criteria) this;
        }

        public Criteria andExtraidIn(List<String> values) {
            addCriterion("EXTRAID in", values, "extraid");
            return (Criteria) this;
        }

        public Criteria andExtraidNotIn(List<String> values) {
            addCriterion("EXTRAID not in", values, "extraid");
            return (Criteria) this;
        }

        public Criteria andExtraidBetween(String value1, String value2) {
            addCriterion("EXTRAID between", value1, value2, "extraid");
            return (Criteria) this;
        }

        public Criteria andExtraidNotBetween(String value1, String value2) {
            addCriterion("EXTRAID not between", value1, value2, "extraid");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeIsNull() {
            addCriterion("EXTRAID_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeIsNotNull() {
            addCriterion("EXTRAID_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeEqualTo(String value) {
            addCriterion("EXTRAID_TYPE =", value, "extraidType");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeNotEqualTo(String value) {
            addCriterion("EXTRAID_TYPE <>", value, "extraidType");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeGreaterThan(String value) {
            addCriterion("EXTRAID_TYPE >", value, "extraidType");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeGreaterThanOrEqualTo(String value) {
            addCriterion("EXTRAID_TYPE >=", value, "extraidType");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeLessThan(String value) {
            addCriterion("EXTRAID_TYPE <", value, "extraidType");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeLessThanOrEqualTo(String value) {
            addCriterion("EXTRAID_TYPE <=", value, "extraidType");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeLike(String value) {
            addCriterion("EXTRAID_TYPE like", value, "extraidType");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeNotLike(String value) {
            addCriterion("EXTRAID_TYPE not like", value, "extraidType");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeIn(List<String> values) {
            addCriterion("EXTRAID_TYPE in", values, "extraidType");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeNotIn(List<String> values) {
            addCriterion("EXTRAID_TYPE not in", values, "extraidType");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeBetween(String value1, String value2) {
            addCriterion("EXTRAID_TYPE between", value1, value2, "extraidType");
            return (Criteria) this;
        }

        public Criteria andExtraidTypeNotBetween(String value1, String value2) {
            addCriterion("EXTRAID_TYPE not between", value1, value2, "extraidType");
            return (Criteria) this;
        }

        public Criteria andLoadDtIsNull() {
            addCriterion("LOAD_DT is null");
            return (Criteria) this;
        }

        public Criteria andLoadDtIsNotNull() {
            addCriterion("LOAD_DT is not null");
            return (Criteria) this;
        }

        public Criteria andLoadDtEqualTo(Date value) {
            addCriterionForJDBCDate("LOAD_DT =", value, "loadDt");
            return (Criteria) this;
        }

        public Criteria andLoadDtNotEqualTo(Date value) {
            addCriterionForJDBCDate("LOAD_DT <>", value, "loadDt");
            return (Criteria) this;
        }

        public Criteria andLoadDtGreaterThan(Date value) {
            addCriterionForJDBCDate("LOAD_DT >", value, "loadDt");
            return (Criteria) this;
        }

        public Criteria andLoadDtGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LOAD_DT >=", value, "loadDt");
            return (Criteria) this;
        }

        public Criteria andLoadDtLessThan(Date value) {
            addCriterionForJDBCDate("LOAD_DT <", value, "loadDt");
            return (Criteria) this;
        }

        public Criteria andLoadDtLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LOAD_DT <=", value, "loadDt");
            return (Criteria) this;
        }

        public Criteria andLoadDtIn(List<Date> values) {
            addCriterionForJDBCDate("LOAD_DT in", values, "loadDt");
            return (Criteria) this;
        }

        public Criteria andLoadDtNotIn(List<Date> values) {
            addCriterionForJDBCDate("LOAD_DT not in", values, "loadDt");
            return (Criteria) this;
        }

        public Criteria andLoadDtBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LOAD_DT between", value1, value2, "loadDt");
            return (Criteria) this;
        }

        public Criteria andLoadDtNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LOAD_DT not between", value1, value2, "loadDt");
            return (Criteria) this;
        }

        public Criteria andLastsourcesyncDtIsNull() {
            addCriterion("LASTSOURCESYNC_DT is null");
            return (Criteria) this;
        }

        public Criteria andLastsourcesyncDtIsNotNull() {
            addCriterion("LASTSOURCESYNC_DT is not null");
            return (Criteria) this;
        }

        public Criteria andLastsourcesyncDtEqualTo(Date value) {
            addCriterionForJDBCDate("LASTSOURCESYNC_DT =", value, "lastsourcesyncDt");
            return (Criteria) this;
        }

        public Criteria andLastsourcesyncDtNotEqualTo(Date value) {
            addCriterionForJDBCDate("LASTSOURCESYNC_DT <>", value, "lastsourcesyncDt");
            return (Criteria) this;
        }

        public Criteria andLastsourcesyncDtGreaterThan(Date value) {
            addCriterionForJDBCDate("LASTSOURCESYNC_DT >", value, "lastsourcesyncDt");
            return (Criteria) this;
        }

        public Criteria andLastsourcesyncDtGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LASTSOURCESYNC_DT >=", value, "lastsourcesyncDt");
            return (Criteria) this;
        }

        public Criteria andLastsourcesyncDtLessThan(Date value) {
            addCriterionForJDBCDate("LASTSOURCESYNC_DT <", value, "lastsourcesyncDt");
            return (Criteria) this;
        }

        public Criteria andLastsourcesyncDtLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LASTSOURCESYNC_DT <=", value, "lastsourcesyncDt");
            return (Criteria) this;
        }

        public Criteria andLastsourcesyncDtIn(List<Date> values) {
            addCriterionForJDBCDate("LASTSOURCESYNC_DT in", values, "lastsourcesyncDt");
            return (Criteria) this;
        }

        public Criteria andLastsourcesyncDtNotIn(List<Date> values) {
            addCriterionForJDBCDate("LASTSOURCESYNC_DT not in", values, "lastsourcesyncDt");
            return (Criteria) this;
        }

        public Criteria andLastsourcesyncDtBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LASTSOURCESYNC_DT between", value1, value2, "lastsourcesyncDt");
            return (Criteria) this;
        }

        public Criteria andLastsourcesyncDtNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LASTSOURCESYNC_DT not between", value1, value2, "lastsourcesyncDt");
            return (Criteria) this;
        }

        public Criteria andUpdateDtIsNull() {
            addCriterion("UPDATE_DT is null");
            return (Criteria) this;
        }

        public Criteria andUpdateDtIsNotNull() {
            addCriterion("UPDATE_DT is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateDtEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_DT =", value, "updateDt");
            return (Criteria) this;
        }

        public Criteria andUpdateDtNotEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_DT <>", value, "updateDt");
            return (Criteria) this;
        }

        public Criteria andUpdateDtGreaterThan(Date value) {
            addCriterionForJDBCDate("UPDATE_DT >", value, "updateDt");
            return (Criteria) this;
        }

        public Criteria andUpdateDtGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_DT >=", value, "updateDt");
            return (Criteria) this;
        }

        public Criteria andUpdateDtLessThan(Date value) {
            addCriterionForJDBCDate("UPDATE_DT <", value, "updateDt");
            return (Criteria) this;
        }

        public Criteria andUpdateDtLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_DT <=", value, "updateDt");
            return (Criteria) this;
        }

        public Criteria andUpdateDtIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_DT in", values, "updateDt");
            return (Criteria) this;
        }

        public Criteria andUpdateDtNotIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_DT not in", values, "updateDt");
            return (Criteria) this;
        }

        public Criteria andUpdateDtBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_DT between", value1, value2, "updateDt");
            return (Criteria) this;
        }

        public Criteria andUpdateDtNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_DT not between", value1, value2, "updateDt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PATIENTEXTRAID
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}