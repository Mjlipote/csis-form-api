package tw.edu.ym.csis.maindb.model;

import java.util.ArrayList;
import java.util.List;

public class StudyEventDefFormExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    public StudyEventDefFormExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidIsNull() {
            addCriterion("STUDYEVENTDEFID is null");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidIsNotNull() {
            addCriterion("STUDYEVENTDEFID is not null");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidEqualTo(Long value) {
            addCriterion("STUDYEVENTDEFID =", value, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidNotEqualTo(Long value) {
            addCriterion("STUDYEVENTDEFID <>", value, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidGreaterThan(Long value) {
            addCriterion("STUDYEVENTDEFID >", value, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidGreaterThanOrEqualTo(Long value) {
            addCriterion("STUDYEVENTDEFID >=", value, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidLessThan(Long value) {
            addCriterion("STUDYEVENTDEFID <", value, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidLessThanOrEqualTo(Long value) {
            addCriterion("STUDYEVENTDEFID <=", value, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidIn(List<Long> values) {
            addCriterion("STUDYEVENTDEFID in", values, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidNotIn(List<Long> values) {
            addCriterion("STUDYEVENTDEFID not in", values, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidBetween(Long value1, Long value2) {
            addCriterion("STUDYEVENTDEFID between", value1, value2, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidNotBetween(Long value1, Long value2) {
            addCriterion("STUDYEVENTDEFID not between", value1, value2, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andFormidIsNull() {
            addCriterion("FORMID is null");
            return (Criteria) this;
        }

        public Criteria andFormidIsNotNull() {
            addCriterion("FORMID is not null");
            return (Criteria) this;
        }

        public Criteria andFormidEqualTo(Long value) {
            addCriterion("FORMID =", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidNotEqualTo(Long value) {
            addCriterion("FORMID <>", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidGreaterThan(Long value) {
            addCriterion("FORMID >", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidGreaterThanOrEqualTo(Long value) {
            addCriterion("FORMID >=", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidLessThan(Long value) {
            addCriterion("FORMID <", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidLessThanOrEqualTo(Long value) {
            addCriterion("FORMID <=", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidIn(List<Long> values) {
            addCriterion("FORMID in", values, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidNotIn(List<Long> values) {
            addCriterion("FORMID not in", values, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidBetween(Long value1, Long value2) {
            addCriterion("FORMID between", value1, value2, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidNotBetween(Long value1, Long value2) {
            addCriterion("FORMID not between", value1, value2, "formid");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgIsNull() {
            addCriterion("REQUIRED_FLG is null");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgIsNotNull() {
            addCriterion("REQUIRED_FLG is not null");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgEqualTo(String value) {
            addCriterion("REQUIRED_FLG =", value, "requiredFlg");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgNotEqualTo(String value) {
            addCriterion("REQUIRED_FLG <>", value, "requiredFlg");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgGreaterThan(String value) {
            addCriterion("REQUIRED_FLG >", value, "requiredFlg");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgGreaterThanOrEqualTo(String value) {
            addCriterion("REQUIRED_FLG >=", value, "requiredFlg");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgLessThan(String value) {
            addCriterion("REQUIRED_FLG <", value, "requiredFlg");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgLessThanOrEqualTo(String value) {
            addCriterion("REQUIRED_FLG <=", value, "requiredFlg");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgLike(String value) {
            addCriterion("REQUIRED_FLG like", value, "requiredFlg");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgNotLike(String value) {
            addCriterion("REQUIRED_FLG not like", value, "requiredFlg");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgIn(List<String> values) {
            addCriterion("REQUIRED_FLG in", values, "requiredFlg");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgNotIn(List<String> values) {
            addCriterion("REQUIRED_FLG not in", values, "requiredFlg");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgBetween(String value1, String value2) {
            addCriterion("REQUIRED_FLG between", value1, value2, "requiredFlg");
            return (Criteria) this;
        }

        public Criteria andRequiredFlgNotBetween(String value1, String value2) {
            addCriterion("REQUIRED_FLG not between", value1, value2, "requiredFlg");
            return (Criteria) this;
        }

        public Criteria andFormorderIsNull() {
            addCriterion("FORMORDER is null");
            return (Criteria) this;
        }

        public Criteria andFormorderIsNotNull() {
            addCriterion("FORMORDER is not null");
            return (Criteria) this;
        }

        public Criteria andFormorderEqualTo(Long value) {
            addCriterion("FORMORDER =", value, "formorder");
            return (Criteria) this;
        }

        public Criteria andFormorderNotEqualTo(Long value) {
            addCriterion("FORMORDER <>", value, "formorder");
            return (Criteria) this;
        }

        public Criteria andFormorderGreaterThan(Long value) {
            addCriterion("FORMORDER >", value, "formorder");
            return (Criteria) this;
        }

        public Criteria andFormorderGreaterThanOrEqualTo(Long value) {
            addCriterion("FORMORDER >=", value, "formorder");
            return (Criteria) this;
        }

        public Criteria andFormorderLessThan(Long value) {
            addCriterion("FORMORDER <", value, "formorder");
            return (Criteria) this;
        }

        public Criteria andFormorderLessThanOrEqualTo(Long value) {
            addCriterion("FORMORDER <=", value, "formorder");
            return (Criteria) this;
        }

        public Criteria andFormorderIn(List<Long> values) {
            addCriterion("FORMORDER in", values, "formorder");
            return (Criteria) this;
        }

        public Criteria andFormorderNotIn(List<Long> values) {
            addCriterion("FORMORDER not in", values, "formorder");
            return (Criteria) this;
        }

        public Criteria andFormorderBetween(Long value1, Long value2) {
            addCriterion("FORMORDER between", value1, value2, "formorder");
            return (Criteria) this;
        }

        public Criteria andFormorderNotBetween(Long value1, Long value2) {
            addCriterion("FORMORDER not between", value1, value2, "formorder");
            return (Criteria) this;
        }

        public Criteria andDefaultformversionidIsNull() {
            addCriterion("DEFAULTFORMVERSIONID is null");
            return (Criteria) this;
        }

        public Criteria andDefaultformversionidIsNotNull() {
            addCriterion("DEFAULTFORMVERSIONID is not null");
            return (Criteria) this;
        }

        public Criteria andDefaultformversionidEqualTo(Long value) {
            addCriterion("DEFAULTFORMVERSIONID =", value, "defaultformversionid");
            return (Criteria) this;
        }

        public Criteria andDefaultformversionidNotEqualTo(Long value) {
            addCriterion("DEFAULTFORMVERSIONID <>", value, "defaultformversionid");
            return (Criteria) this;
        }

        public Criteria andDefaultformversionidGreaterThan(Long value) {
            addCriterion("DEFAULTFORMVERSIONID >", value, "defaultformversionid");
            return (Criteria) this;
        }

        public Criteria andDefaultformversionidGreaterThanOrEqualTo(Long value) {
            addCriterion("DEFAULTFORMVERSIONID >=", value, "defaultformversionid");
            return (Criteria) this;
        }

        public Criteria andDefaultformversionidLessThan(Long value) {
            addCriterion("DEFAULTFORMVERSIONID <", value, "defaultformversionid");
            return (Criteria) this;
        }

        public Criteria andDefaultformversionidLessThanOrEqualTo(Long value) {
            addCriterion("DEFAULTFORMVERSIONID <=", value, "defaultformversionid");
            return (Criteria) this;
        }

        public Criteria andDefaultformversionidIn(List<Long> values) {
            addCriterion("DEFAULTFORMVERSIONID in", values, "defaultformversionid");
            return (Criteria) this;
        }

        public Criteria andDefaultformversionidNotIn(List<Long> values) {
            addCriterion("DEFAULTFORMVERSIONID not in", values, "defaultformversionid");
            return (Criteria) this;
        }

        public Criteria andDefaultformversionidBetween(Long value1, Long value2) {
            addCriterion("DEFAULTFORMVERSIONID between", value1, value2, "defaultformversionid");
            return (Criteria) this;
        }

        public Criteria andDefaultformversionidNotBetween(Long value1, Long value2) {
            addCriterion("DEFAULTFORMVERSIONID not between", value1, value2, "defaultformversionid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table STUDYEVENTDEFFORM
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}