package tw.edu.ym.csis.maindb.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ComparisionCriterionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    public ComparisionCriterionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSavedqueryidIsNull() {
            addCriterion("SAVEDQUERYID is null");
            return (Criteria) this;
        }

        public Criteria andSavedqueryidIsNotNull() {
            addCriterion("SAVEDQUERYID is not null");
            return (Criteria) this;
        }

        public Criteria andSavedqueryidEqualTo(Long value) {
            addCriterion("SAVEDQUERYID =", value, "savedqueryid");
            return (Criteria) this;
        }

        public Criteria andSavedqueryidNotEqualTo(Long value) {
            addCriterion("SAVEDQUERYID <>", value, "savedqueryid");
            return (Criteria) this;
        }

        public Criteria andSavedqueryidGreaterThan(Long value) {
            addCriterion("SAVEDQUERYID >", value, "savedqueryid");
            return (Criteria) this;
        }

        public Criteria andSavedqueryidGreaterThanOrEqualTo(Long value) {
            addCriterion("SAVEDQUERYID >=", value, "savedqueryid");
            return (Criteria) this;
        }

        public Criteria andSavedqueryidLessThan(Long value) {
            addCriterion("SAVEDQUERYID <", value, "savedqueryid");
            return (Criteria) this;
        }

        public Criteria andSavedqueryidLessThanOrEqualTo(Long value) {
            addCriterion("SAVEDQUERYID <=", value, "savedqueryid");
            return (Criteria) this;
        }

        public Criteria andSavedqueryidIn(List<Long> values) {
            addCriterion("SAVEDQUERYID in", values, "savedqueryid");
            return (Criteria) this;
        }

        public Criteria andSavedqueryidNotIn(List<Long> values) {
            addCriterion("SAVEDQUERYID not in", values, "savedqueryid");
            return (Criteria) this;
        }

        public Criteria andSavedqueryidBetween(Long value1, Long value2) {
            addCriterion("SAVEDQUERYID between", value1, value2, "savedqueryid");
            return (Criteria) this;
        }

        public Criteria andSavedqueryidNotBetween(Long value1, Long value2) {
            addCriterion("SAVEDQUERYID not between", value1, value2, "savedqueryid");
            return (Criteria) this;
        }

        public Criteria andCsistabcolumnidIsNull() {
            addCriterion("CSISTABCOLUMNID is null");
            return (Criteria) this;
        }

        public Criteria andCsistabcolumnidIsNotNull() {
            addCriterion("CSISTABCOLUMNID is not null");
            return (Criteria) this;
        }

        public Criteria andCsistabcolumnidEqualTo(Long value) {
            addCriterion("CSISTABCOLUMNID =", value, "csistabcolumnid");
            return (Criteria) this;
        }

        public Criteria andCsistabcolumnidNotEqualTo(Long value) {
            addCriterion("CSISTABCOLUMNID <>", value, "csistabcolumnid");
            return (Criteria) this;
        }

        public Criteria andCsistabcolumnidGreaterThan(Long value) {
            addCriterion("CSISTABCOLUMNID >", value, "csistabcolumnid");
            return (Criteria) this;
        }

        public Criteria andCsistabcolumnidGreaterThanOrEqualTo(Long value) {
            addCriterion("CSISTABCOLUMNID >=", value, "csistabcolumnid");
            return (Criteria) this;
        }

        public Criteria andCsistabcolumnidLessThan(Long value) {
            addCriterion("CSISTABCOLUMNID <", value, "csistabcolumnid");
            return (Criteria) this;
        }

        public Criteria andCsistabcolumnidLessThanOrEqualTo(Long value) {
            addCriterion("CSISTABCOLUMNID <=", value, "csistabcolumnid");
            return (Criteria) this;
        }

        public Criteria andCsistabcolumnidIn(List<Long> values) {
            addCriterion("CSISTABCOLUMNID in", values, "csistabcolumnid");
            return (Criteria) this;
        }

        public Criteria andCsistabcolumnidNotIn(List<Long> values) {
            addCriterion("CSISTABCOLUMNID not in", values, "csistabcolumnid");
            return (Criteria) this;
        }

        public Criteria andCsistabcolumnidBetween(Long value1, Long value2) {
            addCriterion("CSISTABCOLUMNID between", value1, value2, "csistabcolumnid");
            return (Criteria) this;
        }

        public Criteria andCsistabcolumnidNotBetween(Long value1, Long value2) {
            addCriterion("CSISTABCOLUMNID not between", value1, value2, "csistabcolumnid");
            return (Criteria) this;
        }

        public Criteria andDatapointidIsNull() {
            addCriterion("DATAPOINTID is null");
            return (Criteria) this;
        }

        public Criteria andDatapointidIsNotNull() {
            addCriterion("DATAPOINTID is not null");
            return (Criteria) this;
        }

        public Criteria andDatapointidEqualTo(Long value) {
            addCriterion("DATAPOINTID =", value, "datapointid");
            return (Criteria) this;
        }

        public Criteria andDatapointidNotEqualTo(Long value) {
            addCriterion("DATAPOINTID <>", value, "datapointid");
            return (Criteria) this;
        }

        public Criteria andDatapointidGreaterThan(Long value) {
            addCriterion("DATAPOINTID >", value, "datapointid");
            return (Criteria) this;
        }

        public Criteria andDatapointidGreaterThanOrEqualTo(Long value) {
            addCriterion("DATAPOINTID >=", value, "datapointid");
            return (Criteria) this;
        }

        public Criteria andDatapointidLessThan(Long value) {
            addCriterion("DATAPOINTID <", value, "datapointid");
            return (Criteria) this;
        }

        public Criteria andDatapointidLessThanOrEqualTo(Long value) {
            addCriterion("DATAPOINTID <=", value, "datapointid");
            return (Criteria) this;
        }

        public Criteria andDatapointidIn(List<Long> values) {
            addCriterion("DATAPOINTID in", values, "datapointid");
            return (Criteria) this;
        }

        public Criteria andDatapointidNotIn(List<Long> values) {
            addCriterion("DATAPOINTID not in", values, "datapointid");
            return (Criteria) this;
        }

        public Criteria andDatapointidBetween(Long value1, Long value2) {
            addCriterion("DATAPOINTID between", value1, value2, "datapointid");
            return (Criteria) this;
        }

        public Criteria andDatapointidNotBetween(Long value1, Long value2) {
            addCriterion("DATAPOINTID not between", value1, value2, "datapointid");
            return (Criteria) this;
        }

        public Criteria andQuestionidIsNull() {
            addCriterion("QUESTIONID is null");
            return (Criteria) this;
        }

        public Criteria andQuestionidIsNotNull() {
            addCriterion("QUESTIONID is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionidEqualTo(Long value) {
            addCriterion("QUESTIONID =", value, "questionid");
            return (Criteria) this;
        }

        public Criteria andQuestionidNotEqualTo(Long value) {
            addCriterion("QUESTIONID <>", value, "questionid");
            return (Criteria) this;
        }

        public Criteria andQuestionidGreaterThan(Long value) {
            addCriterion("QUESTIONID >", value, "questionid");
            return (Criteria) this;
        }

        public Criteria andQuestionidGreaterThanOrEqualTo(Long value) {
            addCriterion("QUESTIONID >=", value, "questionid");
            return (Criteria) this;
        }

        public Criteria andQuestionidLessThan(Long value) {
            addCriterion("QUESTIONID <", value, "questionid");
            return (Criteria) this;
        }

        public Criteria andQuestionidLessThanOrEqualTo(Long value) {
            addCriterion("QUESTIONID <=", value, "questionid");
            return (Criteria) this;
        }

        public Criteria andQuestionidIn(List<Long> values) {
            addCriterion("QUESTIONID in", values, "questionid");
            return (Criteria) this;
        }

        public Criteria andQuestionidNotIn(List<Long> values) {
            addCriterion("QUESTIONID not in", values, "questionid");
            return (Criteria) this;
        }

        public Criteria andQuestionidBetween(Long value1, Long value2) {
            addCriterion("QUESTIONID between", value1, value2, "questionid");
            return (Criteria) this;
        }

        public Criteria andQuestionidNotBetween(Long value1, Long value2) {
            addCriterion("QUESTIONID not between", value1, value2, "questionid");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeIsNull() {
            addCriterion("COMPOPERATORCODE is null");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeIsNotNull() {
            addCriterion("COMPOPERATORCODE is not null");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeEqualTo(String value) {
            addCriterion("COMPOPERATORCODE =", value, "compoperatorcode");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeNotEqualTo(String value) {
            addCriterion("COMPOPERATORCODE <>", value, "compoperatorcode");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeGreaterThan(String value) {
            addCriterion("COMPOPERATORCODE >", value, "compoperatorcode");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeGreaterThanOrEqualTo(String value) {
            addCriterion("COMPOPERATORCODE >=", value, "compoperatorcode");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeLessThan(String value) {
            addCriterion("COMPOPERATORCODE <", value, "compoperatorcode");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeLessThanOrEqualTo(String value) {
            addCriterion("COMPOPERATORCODE <=", value, "compoperatorcode");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeLike(String value) {
            addCriterion("COMPOPERATORCODE like", value, "compoperatorcode");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeNotLike(String value) {
            addCriterion("COMPOPERATORCODE not like", value, "compoperatorcode");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeIn(List<String> values) {
            addCriterion("COMPOPERATORCODE in", values, "compoperatorcode");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeNotIn(List<String> values) {
            addCriterion("COMPOPERATORCODE not in", values, "compoperatorcode");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeBetween(String value1, String value2) {
            addCriterion("COMPOPERATORCODE between", value1, value2, "compoperatorcode");
            return (Criteria) this;
        }

        public Criteria andCompoperatorcodeNotBetween(String value1, String value2) {
            addCriterion("COMPOPERATORCODE not between", value1, value2, "compoperatorcode");
            return (Criteria) this;
        }

        public Criteria andCharactervalueIsNull() {
            addCriterion("CHARACTERVALUE is null");
            return (Criteria) this;
        }

        public Criteria andCharactervalueIsNotNull() {
            addCriterion("CHARACTERVALUE is not null");
            return (Criteria) this;
        }

        public Criteria andCharactervalueEqualTo(String value) {
            addCriterion("CHARACTERVALUE =", value, "charactervalue");
            return (Criteria) this;
        }

        public Criteria andCharactervalueNotEqualTo(String value) {
            addCriterion("CHARACTERVALUE <>", value, "charactervalue");
            return (Criteria) this;
        }

        public Criteria andCharactervalueGreaterThan(String value) {
            addCriterion("CHARACTERVALUE >", value, "charactervalue");
            return (Criteria) this;
        }

        public Criteria andCharactervalueGreaterThanOrEqualTo(String value) {
            addCriterion("CHARACTERVALUE >=", value, "charactervalue");
            return (Criteria) this;
        }

        public Criteria andCharactervalueLessThan(String value) {
            addCriterion("CHARACTERVALUE <", value, "charactervalue");
            return (Criteria) this;
        }

        public Criteria andCharactervalueLessThanOrEqualTo(String value) {
            addCriterion("CHARACTERVALUE <=", value, "charactervalue");
            return (Criteria) this;
        }

        public Criteria andCharactervalueLike(String value) {
            addCriterion("CHARACTERVALUE like", value, "charactervalue");
            return (Criteria) this;
        }

        public Criteria andCharactervalueNotLike(String value) {
            addCriterion("CHARACTERVALUE not like", value, "charactervalue");
            return (Criteria) this;
        }

        public Criteria andCharactervalueIn(List<String> values) {
            addCriterion("CHARACTERVALUE in", values, "charactervalue");
            return (Criteria) this;
        }

        public Criteria andCharactervalueNotIn(List<String> values) {
            addCriterion("CHARACTERVALUE not in", values, "charactervalue");
            return (Criteria) this;
        }

        public Criteria andCharactervalueBetween(String value1, String value2) {
            addCriterion("CHARACTERVALUE between", value1, value2, "charactervalue");
            return (Criteria) this;
        }

        public Criteria andCharactervalueNotBetween(String value1, String value2) {
            addCriterion("CHARACTERVALUE not between", value1, value2, "charactervalue");
            return (Criteria) this;
        }

        public Criteria andNumericalvalueIsNull() {
            addCriterion("NUMERICALVALUE is null");
            return (Criteria) this;
        }

        public Criteria andNumericalvalueIsNotNull() {
            addCriterion("NUMERICALVALUE is not null");
            return (Criteria) this;
        }

        public Criteria andNumericalvalueEqualTo(BigDecimal value) {
            addCriterion("NUMERICALVALUE =", value, "numericalvalue");
            return (Criteria) this;
        }

        public Criteria andNumericalvalueNotEqualTo(BigDecimal value) {
            addCriterion("NUMERICALVALUE <>", value, "numericalvalue");
            return (Criteria) this;
        }

        public Criteria andNumericalvalueGreaterThan(BigDecimal value) {
            addCriterion("NUMERICALVALUE >", value, "numericalvalue");
            return (Criteria) this;
        }

        public Criteria andNumericalvalueGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("NUMERICALVALUE >=", value, "numericalvalue");
            return (Criteria) this;
        }

        public Criteria andNumericalvalueLessThan(BigDecimal value) {
            addCriterion("NUMERICALVALUE <", value, "numericalvalue");
            return (Criteria) this;
        }

        public Criteria andNumericalvalueLessThanOrEqualTo(BigDecimal value) {
            addCriterion("NUMERICALVALUE <=", value, "numericalvalue");
            return (Criteria) this;
        }

        public Criteria andNumericalvalueIn(List<BigDecimal> values) {
            addCriterion("NUMERICALVALUE in", values, "numericalvalue");
            return (Criteria) this;
        }

        public Criteria andNumericalvalueNotIn(List<BigDecimal> values) {
            addCriterion("NUMERICALVALUE not in", values, "numericalvalue");
            return (Criteria) this;
        }

        public Criteria andNumericalvalueBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("NUMERICALVALUE between", value1, value2, "numericalvalue");
            return (Criteria) this;
        }

        public Criteria andNumericalvalueNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("NUMERICALVALUE not between", value1, value2, "numericalvalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueIsNull() {
            addCriterion("DATEVALUE is null");
            return (Criteria) this;
        }

        public Criteria andDatevalueIsNotNull() {
            addCriterion("DATEVALUE is not null");
            return (Criteria) this;
        }

        public Criteria andDatevalueEqualTo(Date value) {
            addCriterionForJDBCDate("DATEVALUE =", value, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueNotEqualTo(Date value) {
            addCriterionForJDBCDate("DATEVALUE <>", value, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueGreaterThan(Date value) {
            addCriterionForJDBCDate("DATEVALUE >", value, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DATEVALUE >=", value, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueLessThan(Date value) {
            addCriterionForJDBCDate("DATEVALUE <", value, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DATEVALUE <=", value, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueIn(List<Date> values) {
            addCriterionForJDBCDate("DATEVALUE in", values, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueNotIn(List<Date> values) {
            addCriterionForJDBCDate("DATEVALUE not in", values, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DATEVALUE between", value1, value2, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DATEVALUE not between", value1, value2, "datevalue");
            return (Criteria) this;
        }

        public Criteria andJoincolumnidIsNull() {
            addCriterion("JOINCOLUMNID is null");
            return (Criteria) this;
        }

        public Criteria andJoincolumnidIsNotNull() {
            addCriterion("JOINCOLUMNID is not null");
            return (Criteria) this;
        }

        public Criteria andJoincolumnidEqualTo(Long value) {
            addCriterion("JOINCOLUMNID =", value, "joincolumnid");
            return (Criteria) this;
        }

        public Criteria andJoincolumnidNotEqualTo(Long value) {
            addCriterion("JOINCOLUMNID <>", value, "joincolumnid");
            return (Criteria) this;
        }

        public Criteria andJoincolumnidGreaterThan(Long value) {
            addCriterion("JOINCOLUMNID >", value, "joincolumnid");
            return (Criteria) this;
        }

        public Criteria andJoincolumnidGreaterThanOrEqualTo(Long value) {
            addCriterion("JOINCOLUMNID >=", value, "joincolumnid");
            return (Criteria) this;
        }

        public Criteria andJoincolumnidLessThan(Long value) {
            addCriterion("JOINCOLUMNID <", value, "joincolumnid");
            return (Criteria) this;
        }

        public Criteria andJoincolumnidLessThanOrEqualTo(Long value) {
            addCriterion("JOINCOLUMNID <=", value, "joincolumnid");
            return (Criteria) this;
        }

        public Criteria andJoincolumnidIn(List<Long> values) {
            addCriterion("JOINCOLUMNID in", values, "joincolumnid");
            return (Criteria) this;
        }

        public Criteria andJoincolumnidNotIn(List<Long> values) {
            addCriterion("JOINCOLUMNID not in", values, "joincolumnid");
            return (Criteria) this;
        }

        public Criteria andJoincolumnidBetween(Long value1, Long value2) {
            addCriterion("JOINCOLUMNID between", value1, value2, "joincolumnid");
            return (Criteria) this;
        }

        public Criteria andJoincolumnidNotBetween(Long value1, Long value2) {
            addCriterion("JOINCOLUMNID not between", value1, value2, "joincolumnid");
            return (Criteria) this;
        }

        public Criteria andSubqueryidIsNull() {
            addCriterion("SUBQUERYID is null");
            return (Criteria) this;
        }

        public Criteria andSubqueryidIsNotNull() {
            addCriterion("SUBQUERYID is not null");
            return (Criteria) this;
        }

        public Criteria andSubqueryidEqualTo(Long value) {
            addCriterion("SUBQUERYID =", value, "subqueryid");
            return (Criteria) this;
        }

        public Criteria andSubqueryidNotEqualTo(Long value) {
            addCriterion("SUBQUERYID <>", value, "subqueryid");
            return (Criteria) this;
        }

        public Criteria andSubqueryidGreaterThan(Long value) {
            addCriterion("SUBQUERYID >", value, "subqueryid");
            return (Criteria) this;
        }

        public Criteria andSubqueryidGreaterThanOrEqualTo(Long value) {
            addCriterion("SUBQUERYID >=", value, "subqueryid");
            return (Criteria) this;
        }

        public Criteria andSubqueryidLessThan(Long value) {
            addCriterion("SUBQUERYID <", value, "subqueryid");
            return (Criteria) this;
        }

        public Criteria andSubqueryidLessThanOrEqualTo(Long value) {
            addCriterion("SUBQUERYID <=", value, "subqueryid");
            return (Criteria) this;
        }

        public Criteria andSubqueryidIn(List<Long> values) {
            addCriterion("SUBQUERYID in", values, "subqueryid");
            return (Criteria) this;
        }

        public Criteria andSubqueryidNotIn(List<Long> values) {
            addCriterion("SUBQUERYID not in", values, "subqueryid");
            return (Criteria) this;
        }

        public Criteria andSubqueryidBetween(Long value1, Long value2) {
            addCriterion("SUBQUERYID between", value1, value2, "subqueryid");
            return (Criteria) this;
        }

        public Criteria andSubqueryidNotBetween(Long value1, Long value2) {
            addCriterion("SUBQUERYID not between", value1, value2, "subqueryid");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameIsNull() {
            addCriterion("COMPCRITERIONNAME is null");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameIsNotNull() {
            addCriterion("COMPCRITERIONNAME is not null");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameEqualTo(String value) {
            addCriterion("COMPCRITERIONNAME =", value, "compcriterionname");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameNotEqualTo(String value) {
            addCriterion("COMPCRITERIONNAME <>", value, "compcriterionname");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameGreaterThan(String value) {
            addCriterion("COMPCRITERIONNAME >", value, "compcriterionname");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameGreaterThanOrEqualTo(String value) {
            addCriterion("COMPCRITERIONNAME >=", value, "compcriterionname");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameLessThan(String value) {
            addCriterion("COMPCRITERIONNAME <", value, "compcriterionname");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameLessThanOrEqualTo(String value) {
            addCriterion("COMPCRITERIONNAME <=", value, "compcriterionname");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameLike(String value) {
            addCriterion("COMPCRITERIONNAME like", value, "compcriterionname");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameNotLike(String value) {
            addCriterion("COMPCRITERIONNAME not like", value, "compcriterionname");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameIn(List<String> values) {
            addCriterion("COMPCRITERIONNAME in", values, "compcriterionname");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameNotIn(List<String> values) {
            addCriterion("COMPCRITERIONNAME not in", values, "compcriterionname");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameBetween(String value1, String value2) {
            addCriterion("COMPCRITERIONNAME between", value1, value2, "compcriterionname");
            return (Criteria) this;
        }

        public Criteria andCompcriterionnameNotBetween(String value1, String value2) {
            addCriterion("COMPCRITERIONNAME not between", value1, value2, "compcriterionname");
            return (Criteria) this;
        }

        public Criteria andLogexpressionidIsNull() {
            addCriterion("LOGEXPRESSIONID is null");
            return (Criteria) this;
        }

        public Criteria andLogexpressionidIsNotNull() {
            addCriterion("LOGEXPRESSIONID is not null");
            return (Criteria) this;
        }

        public Criteria andLogexpressionidEqualTo(Long value) {
            addCriterion("LOGEXPRESSIONID =", value, "logexpressionid");
            return (Criteria) this;
        }

        public Criteria andLogexpressionidNotEqualTo(Long value) {
            addCriterion("LOGEXPRESSIONID <>", value, "logexpressionid");
            return (Criteria) this;
        }

        public Criteria andLogexpressionidGreaterThan(Long value) {
            addCriterion("LOGEXPRESSIONID >", value, "logexpressionid");
            return (Criteria) this;
        }

        public Criteria andLogexpressionidGreaterThanOrEqualTo(Long value) {
            addCriterion("LOGEXPRESSIONID >=", value, "logexpressionid");
            return (Criteria) this;
        }

        public Criteria andLogexpressionidLessThan(Long value) {
            addCriterion("LOGEXPRESSIONID <", value, "logexpressionid");
            return (Criteria) this;
        }

        public Criteria andLogexpressionidLessThanOrEqualTo(Long value) {
            addCriterion("LOGEXPRESSIONID <=", value, "logexpressionid");
            return (Criteria) this;
        }

        public Criteria andLogexpressionidIn(List<Long> values) {
            addCriterion("LOGEXPRESSIONID in", values, "logexpressionid");
            return (Criteria) this;
        }

        public Criteria andLogexpressionidNotIn(List<Long> values) {
            addCriterion("LOGEXPRESSIONID not in", values, "logexpressionid");
            return (Criteria) this;
        }

        public Criteria andLogexpressionidBetween(Long value1, Long value2) {
            addCriterion("LOGEXPRESSIONID between", value1, value2, "logexpressionid");
            return (Criteria) this;
        }

        public Criteria andLogexpressionidNotBetween(Long value1, Long value2) {
            addCriterion("LOGEXPRESSIONID not between", value1, value2, "logexpressionid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COMPARISONCRITERION
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}