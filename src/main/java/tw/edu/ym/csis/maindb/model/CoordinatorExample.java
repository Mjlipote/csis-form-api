package tw.edu.ym.csis.maindb.model;

import java.util.ArrayList;
import java.util.List;

public class CoordinatorExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    public CoordinatorExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPersonidIsNull() {
            addCriterion("PERSONID is null");
            return (Criteria) this;
        }

        public Criteria andPersonidIsNotNull() {
            addCriterion("PERSONID is not null");
            return (Criteria) this;
        }

        public Criteria andPersonidEqualTo(Long value) {
            addCriterion("PERSONID =", value, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidNotEqualTo(Long value) {
            addCriterion("PERSONID <>", value, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidGreaterThan(Long value) {
            addCriterion("PERSONID >", value, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidGreaterThanOrEqualTo(Long value) {
            addCriterion("PERSONID >=", value, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidLessThan(Long value) {
            addCriterion("PERSONID <", value, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidLessThanOrEqualTo(Long value) {
            addCriterion("PERSONID <=", value, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidIn(List<Long> values) {
            addCriterion("PERSONID in", values, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidNotIn(List<Long> values) {
            addCriterion("PERSONID not in", values, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidBetween(Long value1, Long value2) {
            addCriterion("PERSONID between", value1, value2, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidNotBetween(Long value1, Long value2) {
            addCriterion("PERSONID not between", value1, value2, "personid");
            return (Criteria) this;
        }

        public Criteria andCoordinatoridIsNull() {
            addCriterion("COORDINATORID is null");
            return (Criteria) this;
        }

        public Criteria andCoordinatoridIsNotNull() {
            addCriterion("COORDINATORID is not null");
            return (Criteria) this;
        }

        public Criteria andCoordinatoridEqualTo(Long value) {
            addCriterion("COORDINATORID =", value, "coordinatorid");
            return (Criteria) this;
        }

        public Criteria andCoordinatoridNotEqualTo(Long value) {
            addCriterion("COORDINATORID <>", value, "coordinatorid");
            return (Criteria) this;
        }

        public Criteria andCoordinatoridGreaterThan(Long value) {
            addCriterion("COORDINATORID >", value, "coordinatorid");
            return (Criteria) this;
        }

        public Criteria andCoordinatoridGreaterThanOrEqualTo(Long value) {
            addCriterion("COORDINATORID >=", value, "coordinatorid");
            return (Criteria) this;
        }

        public Criteria andCoordinatoridLessThan(Long value) {
            addCriterion("COORDINATORID <", value, "coordinatorid");
            return (Criteria) this;
        }

        public Criteria andCoordinatoridLessThanOrEqualTo(Long value) {
            addCriterion("COORDINATORID <=", value, "coordinatorid");
            return (Criteria) this;
        }

        public Criteria andCoordinatoridIn(List<Long> values) {
            addCriterion("COORDINATORID in", values, "coordinatorid");
            return (Criteria) this;
        }

        public Criteria andCoordinatoridNotIn(List<Long> values) {
            addCriterion("COORDINATORID not in", values, "coordinatorid");
            return (Criteria) this;
        }

        public Criteria andCoordinatoridBetween(Long value1, Long value2) {
            addCriterion("COORDINATORID between", value1, value2, "coordinatorid");
            return (Criteria) this;
        }

        public Criteria andCoordinatoridNotBetween(Long value1, Long value2) {
            addCriterion("COORDINATORID not between", value1, value2, "coordinatorid");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeIsNull() {
            addCriterion("COORDINATOR_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeIsNotNull() {
            addCriterion("COORDINATOR_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeEqualTo(String value) {
            addCriterion("COORDINATOR_TYPE =", value, "coordinatorType");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeNotEqualTo(String value) {
            addCriterion("COORDINATOR_TYPE <>", value, "coordinatorType");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeGreaterThan(String value) {
            addCriterion("COORDINATOR_TYPE >", value, "coordinatorType");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeGreaterThanOrEqualTo(String value) {
            addCriterion("COORDINATOR_TYPE >=", value, "coordinatorType");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeLessThan(String value) {
            addCriterion("COORDINATOR_TYPE <", value, "coordinatorType");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeLessThanOrEqualTo(String value) {
            addCriterion("COORDINATOR_TYPE <=", value, "coordinatorType");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeLike(String value) {
            addCriterion("COORDINATOR_TYPE like", value, "coordinatorType");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeNotLike(String value) {
            addCriterion("COORDINATOR_TYPE not like", value, "coordinatorType");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeIn(List<String> values) {
            addCriterion("COORDINATOR_TYPE in", values, "coordinatorType");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeNotIn(List<String> values) {
            addCriterion("COORDINATOR_TYPE not in", values, "coordinatorType");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeBetween(String value1, String value2) {
            addCriterion("COORDINATOR_TYPE between", value1, value2, "coordinatorType");
            return (Criteria) this;
        }

        public Criteria andCoordinatorTypeNotBetween(String value1, String value2) {
            addCriterion("COORDINATOR_TYPE not between", value1, value2, "coordinatorType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COORDINATOR
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COORDINATOR
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}