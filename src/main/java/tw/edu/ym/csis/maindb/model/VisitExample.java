package tw.edu.ym.csis.maindb.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class VisitExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    public VisitExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andVisitdateIsNull() {
            addCriterion("VISITDATE is null");
            return (Criteria) this;
        }

        public Criteria andVisitdateIsNotNull() {
            addCriterion("VISITDATE is not null");
            return (Criteria) this;
        }

        public Criteria andVisitdateEqualTo(Date value) {
            addCriterionForJDBCDate("VISITDATE =", value, "visitdate");
            return (Criteria) this;
        }

        public Criteria andVisitdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("VISITDATE <>", value, "visitdate");
            return (Criteria) this;
        }

        public Criteria andVisitdateGreaterThan(Date value) {
            addCriterionForJDBCDate("VISITDATE >", value, "visitdate");
            return (Criteria) this;
        }

        public Criteria andVisitdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("VISITDATE >=", value, "visitdate");
            return (Criteria) this;
        }

        public Criteria andVisitdateLessThan(Date value) {
            addCriterionForJDBCDate("VISITDATE <", value, "visitdate");
            return (Criteria) this;
        }

        public Criteria andVisitdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("VISITDATE <=", value, "visitdate");
            return (Criteria) this;
        }

        public Criteria andVisitdateIn(List<Date> values) {
            addCriterionForJDBCDate("VISITDATE in", values, "visitdate");
            return (Criteria) this;
        }

        public Criteria andVisitdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("VISITDATE not in", values, "visitdate");
            return (Criteria) this;
        }

        public Criteria andVisitdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("VISITDATE between", value1, value2, "visitdate");
            return (Criteria) this;
        }

        public Criteria andVisitdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("VISITDATE not between", value1, value2, "visitdate");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgIsNull() {
            addCriterion("FUTUREVISIT_FLG is null");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgIsNotNull() {
            addCriterion("FUTUREVISIT_FLG is not null");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgEqualTo(String value) {
            addCriterion("FUTUREVISIT_FLG =", value, "futurevisitFlg");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgNotEqualTo(String value) {
            addCriterion("FUTUREVISIT_FLG <>", value, "futurevisitFlg");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgGreaterThan(String value) {
            addCriterion("FUTUREVISIT_FLG >", value, "futurevisitFlg");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgGreaterThanOrEqualTo(String value) {
            addCriterion("FUTUREVISIT_FLG >=", value, "futurevisitFlg");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgLessThan(String value) {
            addCriterion("FUTUREVISIT_FLG <", value, "futurevisitFlg");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgLessThanOrEqualTo(String value) {
            addCriterion("FUTUREVISIT_FLG <=", value, "futurevisitFlg");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgLike(String value) {
            addCriterion("FUTUREVISIT_FLG like", value, "futurevisitFlg");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgNotLike(String value) {
            addCriterion("FUTUREVISIT_FLG not like", value, "futurevisitFlg");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgIn(List<String> values) {
            addCriterion("FUTUREVISIT_FLG in", values, "futurevisitFlg");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgNotIn(List<String> values) {
            addCriterion("FUTUREVISIT_FLG not in", values, "futurevisitFlg");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgBetween(String value1, String value2) {
            addCriterion("FUTUREVISIT_FLG between", value1, value2, "futurevisitFlg");
            return (Criteria) this;
        }

        public Criteria andFuturevisitFlgNotBetween(String value1, String value2) {
            addCriterion("FUTUREVISIT_FLG not between", value1, value2, "futurevisitFlg");
            return (Criteria) this;
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPclpatientidIsNull() {
            addCriterion("PCLPATIENTID is null");
            return (Criteria) this;
        }

        public Criteria andPclpatientidIsNotNull() {
            addCriterion("PCLPATIENTID is not null");
            return (Criteria) this;
        }

        public Criteria andPclpatientidEqualTo(Long value) {
            addCriterion("PCLPATIENTID =", value, "pclpatientid");
            return (Criteria) this;
        }

        public Criteria andPclpatientidNotEqualTo(Long value) {
            addCriterion("PCLPATIENTID <>", value, "pclpatientid");
            return (Criteria) this;
        }

        public Criteria andPclpatientidGreaterThan(Long value) {
            addCriterion("PCLPATIENTID >", value, "pclpatientid");
            return (Criteria) this;
        }

        public Criteria andPclpatientidGreaterThanOrEqualTo(Long value) {
            addCriterion("PCLPATIENTID >=", value, "pclpatientid");
            return (Criteria) this;
        }

        public Criteria andPclpatientidLessThan(Long value) {
            addCriterion("PCLPATIENTID <", value, "pclpatientid");
            return (Criteria) this;
        }

        public Criteria andPclpatientidLessThanOrEqualTo(Long value) {
            addCriterion("PCLPATIENTID <=", value, "pclpatientid");
            return (Criteria) this;
        }

        public Criteria andPclpatientidIn(List<Long> values) {
            addCriterion("PCLPATIENTID in", values, "pclpatientid");
            return (Criteria) this;
        }

        public Criteria andPclpatientidNotIn(List<Long> values) {
            addCriterion("PCLPATIENTID not in", values, "pclpatientid");
            return (Criteria) this;
        }

        public Criteria andPclpatientidBetween(Long value1, Long value2) {
            addCriterion("PCLPATIENTID between", value1, value2, "pclpatientid");
            return (Criteria) this;
        }

        public Criteria andPclpatientidNotBetween(Long value1, Long value2) {
            addCriterion("PCLPATIENTID not between", value1, value2, "pclpatientid");
            return (Criteria) this;
        }

        public Criteria andEventidIsNull() {
            addCriterion("EVENTID is null");
            return (Criteria) this;
        }

        public Criteria andEventidIsNotNull() {
            addCriterion("EVENTID is not null");
            return (Criteria) this;
        }

        public Criteria andEventidEqualTo(Long value) {
            addCriterion("EVENTID =", value, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidNotEqualTo(Long value) {
            addCriterion("EVENTID <>", value, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidGreaterThan(Long value) {
            addCriterion("EVENTID >", value, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidGreaterThanOrEqualTo(Long value) {
            addCriterion("EVENTID >=", value, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidLessThan(Long value) {
            addCriterion("EVENTID <", value, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidLessThanOrEqualTo(Long value) {
            addCriterion("EVENTID <=", value, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidIn(List<Long> values) {
            addCriterion("EVENTID in", values, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidNotIn(List<Long> values) {
            addCriterion("EVENTID not in", values, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidBetween(Long value1, Long value2) {
            addCriterion("EVENTID between", value1, value2, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidNotBetween(Long value1, Long value2) {
            addCriterion("EVENTID not between", value1, value2, "eventid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidIsNull() {
            addCriterion("STUDYEVENTDEFID is null");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidIsNotNull() {
            addCriterion("STUDYEVENTDEFID is not null");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidEqualTo(Long value) {
            addCriterion("STUDYEVENTDEFID =", value, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidNotEqualTo(Long value) {
            addCriterion("STUDYEVENTDEFID <>", value, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidGreaterThan(Long value) {
            addCriterion("STUDYEVENTDEFID >", value, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidGreaterThanOrEqualTo(Long value) {
            addCriterion("STUDYEVENTDEFID >=", value, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidLessThan(Long value) {
            addCriterion("STUDYEVENTDEFID <", value, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidLessThanOrEqualTo(Long value) {
            addCriterion("STUDYEVENTDEFID <=", value, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidIn(List<Long> values) {
            addCriterion("STUDYEVENTDEFID in", values, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidNotIn(List<Long> values) {
            addCriterion("STUDYEVENTDEFID not in", values, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidBetween(Long value1, Long value2) {
            addCriterion("STUDYEVENTDEFID between", value1, value2, "studyeventdefid");
            return (Criteria) this;
        }

        public Criteria andStudyeventdefidNotBetween(Long value1, Long value2) {
            addCriterion("STUDYEVENTDEFID not between", value1, value2, "studyeventdefid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table VISIT
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table VISIT
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}