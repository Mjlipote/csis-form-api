package tw.edu.ym.csis.maindb.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RecruitmentPatientExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    public RecruitmentPatientExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRecruitmentidIsNull() {
            addCriterion("RECRUITMENTID is null");
            return (Criteria) this;
        }

        public Criteria andRecruitmentidIsNotNull() {
            addCriterion("RECRUITMENTID is not null");
            return (Criteria) this;
        }

        public Criteria andRecruitmentidEqualTo(Long value) {
            addCriterion("RECRUITMENTID =", value, "recruitmentid");
            return (Criteria) this;
        }

        public Criteria andRecruitmentidNotEqualTo(Long value) {
            addCriterion("RECRUITMENTID <>", value, "recruitmentid");
            return (Criteria) this;
        }

        public Criteria andRecruitmentidGreaterThan(Long value) {
            addCriterion("RECRUITMENTID >", value, "recruitmentid");
            return (Criteria) this;
        }

        public Criteria andRecruitmentidGreaterThanOrEqualTo(Long value) {
            addCriterion("RECRUITMENTID >=", value, "recruitmentid");
            return (Criteria) this;
        }

        public Criteria andRecruitmentidLessThan(Long value) {
            addCriterion("RECRUITMENTID <", value, "recruitmentid");
            return (Criteria) this;
        }

        public Criteria andRecruitmentidLessThanOrEqualTo(Long value) {
            addCriterion("RECRUITMENTID <=", value, "recruitmentid");
            return (Criteria) this;
        }

        public Criteria andRecruitmentidIn(List<Long> values) {
            addCriterion("RECRUITMENTID in", values, "recruitmentid");
            return (Criteria) this;
        }

        public Criteria andRecruitmentidNotIn(List<Long> values) {
            addCriterion("RECRUITMENTID not in", values, "recruitmentid");
            return (Criteria) this;
        }

        public Criteria andRecruitmentidBetween(Long value1, Long value2) {
            addCriterion("RECRUITMENTID between", value1, value2, "recruitmentid");
            return (Criteria) this;
        }

        public Criteria andRecruitmentidNotBetween(Long value1, Long value2) {
            addCriterion("RECRUITMENTID not between", value1, value2, "recruitmentid");
            return (Criteria) this;
        }

        public Criteria andPatientidIsNull() {
            addCriterion("PATIENTID is null");
            return (Criteria) this;
        }

        public Criteria andPatientidIsNotNull() {
            addCriterion("PATIENTID is not null");
            return (Criteria) this;
        }

        public Criteria andPatientidEqualTo(Long value) {
            addCriterion("PATIENTID =", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidNotEqualTo(Long value) {
            addCriterion("PATIENTID <>", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidGreaterThan(Long value) {
            addCriterion("PATIENTID >", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidGreaterThanOrEqualTo(Long value) {
            addCriterion("PATIENTID >=", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidLessThan(Long value) {
            addCriterion("PATIENTID <", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidLessThanOrEqualTo(Long value) {
            addCriterion("PATIENTID <=", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidIn(List<Long> values) {
            addCriterion("PATIENTID in", values, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidNotIn(List<Long> values) {
            addCriterion("PATIENTID not in", values, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidBetween(Long value1, Long value2) {
            addCriterion("PATIENTID between", value1, value2, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidNotBetween(Long value1, Long value2) {
            addCriterion("PATIENTID not between", value1, value2, "patientid");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusIsNull() {
            addCriterion("RECRUITSTATUS is null");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusIsNotNull() {
            addCriterion("RECRUITSTATUS is not null");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusEqualTo(String value) {
            addCriterion("RECRUITSTATUS =", value, "recruitstatus");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusNotEqualTo(String value) {
            addCriterion("RECRUITSTATUS <>", value, "recruitstatus");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusGreaterThan(String value) {
            addCriterion("RECRUITSTATUS >", value, "recruitstatus");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusGreaterThanOrEqualTo(String value) {
            addCriterion("RECRUITSTATUS >=", value, "recruitstatus");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusLessThan(String value) {
            addCriterion("RECRUITSTATUS <", value, "recruitstatus");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusLessThanOrEqualTo(String value) {
            addCriterion("RECRUITSTATUS <=", value, "recruitstatus");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusLike(String value) {
            addCriterion("RECRUITSTATUS like", value, "recruitstatus");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusNotLike(String value) {
            addCriterion("RECRUITSTATUS not like", value, "recruitstatus");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusIn(List<String> values) {
            addCriterion("RECRUITSTATUS in", values, "recruitstatus");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusNotIn(List<String> values) {
            addCriterion("RECRUITSTATUS not in", values, "recruitstatus");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusBetween(String value1, String value2) {
            addCriterion("RECRUITSTATUS between", value1, value2, "recruitstatus");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusNotBetween(String value1, String value2) {
            addCriterion("RECRUITSTATUS not between", value1, value2, "recruitstatus");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusDtIsNull() {
            addCriterion("RECRUITSTATUS_DT is null");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusDtIsNotNull() {
            addCriterion("RECRUITSTATUS_DT is not null");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusDtEqualTo(Date value) {
            addCriterionForJDBCDate("RECRUITSTATUS_DT =", value, "recruitstatusDt");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusDtNotEqualTo(Date value) {
            addCriterionForJDBCDate("RECRUITSTATUS_DT <>", value, "recruitstatusDt");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusDtGreaterThan(Date value) {
            addCriterionForJDBCDate("RECRUITSTATUS_DT >", value, "recruitstatusDt");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusDtGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("RECRUITSTATUS_DT >=", value, "recruitstatusDt");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusDtLessThan(Date value) {
            addCriterionForJDBCDate("RECRUITSTATUS_DT <", value, "recruitstatusDt");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusDtLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("RECRUITSTATUS_DT <=", value, "recruitstatusDt");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusDtIn(List<Date> values) {
            addCriterionForJDBCDate("RECRUITSTATUS_DT in", values, "recruitstatusDt");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusDtNotIn(List<Date> values) {
            addCriterionForJDBCDate("RECRUITSTATUS_DT not in", values, "recruitstatusDt");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusDtBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("RECRUITSTATUS_DT between", value1, value2, "recruitstatusDt");
            return (Criteria) this;
        }

        public Criteria andRecruitstatusDtNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("RECRUITSTATUS_DT not between", value1, value2, "recruitstatusDt");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgIsNull() {
            addCriterion("ELIGIBILITY_FLG is null");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgIsNotNull() {
            addCriterion("ELIGIBILITY_FLG is not null");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgEqualTo(String value) {
            addCriterion("ELIGIBILITY_FLG =", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgNotEqualTo(String value) {
            addCriterion("ELIGIBILITY_FLG <>", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgGreaterThan(String value) {
            addCriterion("ELIGIBILITY_FLG >", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgGreaterThanOrEqualTo(String value) {
            addCriterion("ELIGIBILITY_FLG >=", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgLessThan(String value) {
            addCriterion("ELIGIBILITY_FLG <", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgLessThanOrEqualTo(String value) {
            addCriterion("ELIGIBILITY_FLG <=", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgLike(String value) {
            addCriterion("ELIGIBILITY_FLG like", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgNotLike(String value) {
            addCriterion("ELIGIBILITY_FLG not like", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgIn(List<String> values) {
            addCriterion("ELIGIBILITY_FLG in", values, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgNotIn(List<String> values) {
            addCriterion("ELIGIBILITY_FLG not in", values, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgBetween(String value1, String value2) {
            addCriterion("ELIGIBILITY_FLG between", value1, value2, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgNotBetween(String value1, String value2) {
            addCriterion("ELIGIBILITY_FLG not between", value1, value2, "eligibilityFlg");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RECRUITMENTPATIENT
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}