package tw.edu.ym.csis.maindb.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ActionLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    public ActionLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDcpidIsNull() {
            addCriterion("DCPID is null");
            return (Criteria) this;
        }

        public Criteria andDcpidIsNotNull() {
            addCriterion("DCPID is not null");
            return (Criteria) this;
        }

        public Criteria andDcpidEqualTo(Long value) {
            addCriterion("DCPID =", value, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidNotEqualTo(Long value) {
            addCriterion("DCPID <>", value, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidGreaterThan(Long value) {
            addCriterion("DCPID >", value, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidGreaterThanOrEqualTo(Long value) {
            addCriterion("DCPID >=", value, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidLessThan(Long value) {
            addCriterion("DCPID <", value, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidLessThanOrEqualTo(Long value) {
            addCriterion("DCPID <=", value, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidIn(List<Long> values) {
            addCriterion("DCPID in", values, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidNotIn(List<Long> values) {
            addCriterion("DCPID not in", values, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidBetween(Long value1, Long value2) {
            addCriterion("DCPID between", value1, value2, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidNotBetween(Long value1, Long value2) {
            addCriterion("DCPID not between", value1, value2, "dcpid");
            return (Criteria) this;
        }

        public Criteria andFormidIsNull() {
            addCriterion("FORMID is null");
            return (Criteria) this;
        }

        public Criteria andFormidIsNotNull() {
            addCriterion("FORMID is not null");
            return (Criteria) this;
        }

        public Criteria andFormidEqualTo(Long value) {
            addCriterion("FORMID =", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidNotEqualTo(Long value) {
            addCriterion("FORMID <>", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidGreaterThan(Long value) {
            addCriterion("FORMID >", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidGreaterThanOrEqualTo(Long value) {
            addCriterion("FORMID >=", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidLessThan(Long value) {
            addCriterion("FORMID <", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidLessThanOrEqualTo(Long value) {
            addCriterion("FORMID <=", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidIn(List<Long> values) {
            addCriterion("FORMID in", values, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidNotIn(List<Long> values) {
            addCriterion("FORMID not in", values, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidBetween(Long value1, Long value2) {
            addCriterion("FORMID between", value1, value2, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidNotBetween(Long value1, Long value2) {
            addCriterion("FORMID not between", value1, value2, "formid");
            return (Criteria) this;
        }

        public Criteria andFormtitleIsNull() {
            addCriterion("FORMTITLE is null");
            return (Criteria) this;
        }

        public Criteria andFormtitleIsNotNull() {
            addCriterion("FORMTITLE is not null");
            return (Criteria) this;
        }

        public Criteria andFormtitleEqualTo(String value) {
            addCriterion("FORMTITLE =", value, "formtitle");
            return (Criteria) this;
        }

        public Criteria andFormtitleNotEqualTo(String value) {
            addCriterion("FORMTITLE <>", value, "formtitle");
            return (Criteria) this;
        }

        public Criteria andFormtitleGreaterThan(String value) {
            addCriterion("FORMTITLE >", value, "formtitle");
            return (Criteria) this;
        }

        public Criteria andFormtitleGreaterThanOrEqualTo(String value) {
            addCriterion("FORMTITLE >=", value, "formtitle");
            return (Criteria) this;
        }

        public Criteria andFormtitleLessThan(String value) {
            addCriterion("FORMTITLE <", value, "formtitle");
            return (Criteria) this;
        }

        public Criteria andFormtitleLessThanOrEqualTo(String value) {
            addCriterion("FORMTITLE <=", value, "formtitle");
            return (Criteria) this;
        }

        public Criteria andFormtitleLike(String value) {
            addCriterion("FORMTITLE like", value, "formtitle");
            return (Criteria) this;
        }

        public Criteria andFormtitleNotLike(String value) {
            addCriterion("FORMTITLE not like", value, "formtitle");
            return (Criteria) this;
        }

        public Criteria andFormtitleIn(List<String> values) {
            addCriterion("FORMTITLE in", values, "formtitle");
            return (Criteria) this;
        }

        public Criteria andFormtitleNotIn(List<String> values) {
            addCriterion("FORMTITLE not in", values, "formtitle");
            return (Criteria) this;
        }

        public Criteria andFormtitleBetween(String value1, String value2) {
            addCriterion("FORMTITLE between", value1, value2, "formtitle");
            return (Criteria) this;
        }

        public Criteria andFormtitleNotBetween(String value1, String value2) {
            addCriterion("FORMTITLE not between", value1, value2, "formtitle");
            return (Criteria) this;
        }

        public Criteria andPersonidIsNull() {
            addCriterion("PERSONID is null");
            return (Criteria) this;
        }

        public Criteria andPersonidIsNotNull() {
            addCriterion("PERSONID is not null");
            return (Criteria) this;
        }

        public Criteria andPersonidEqualTo(Long value) {
            addCriterion("PERSONID =", value, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidNotEqualTo(Long value) {
            addCriterion("PERSONID <>", value, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidGreaterThan(Long value) {
            addCriterion("PERSONID >", value, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidGreaterThanOrEqualTo(Long value) {
            addCriterion("PERSONID >=", value, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidLessThan(Long value) {
            addCriterion("PERSONID <", value, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidLessThanOrEqualTo(Long value) {
            addCriterion("PERSONID <=", value, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidIn(List<Long> values) {
            addCriterion("PERSONID in", values, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidNotIn(List<Long> values) {
            addCriterion("PERSONID not in", values, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidBetween(Long value1, Long value2) {
            addCriterion("PERSONID between", value1, value2, "personid");
            return (Criteria) this;
        }

        public Criteria andPersonidNotBetween(Long value1, Long value2) {
            addCriterion("PERSONID not between", value1, value2, "personid");
            return (Criteria) this;
        }

        public Criteria andLoginnameIsNull() {
            addCriterion("LOGINNAME is null");
            return (Criteria) this;
        }

        public Criteria andLoginnameIsNotNull() {
            addCriterion("LOGINNAME is not null");
            return (Criteria) this;
        }

        public Criteria andLoginnameEqualTo(String value) {
            addCriterion("LOGINNAME =", value, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameNotEqualTo(String value) {
            addCriterion("LOGINNAME <>", value, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameGreaterThan(String value) {
            addCriterion("LOGINNAME >", value, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameGreaterThanOrEqualTo(String value) {
            addCriterion("LOGINNAME >=", value, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameLessThan(String value) {
            addCriterion("LOGINNAME <", value, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameLessThanOrEqualTo(String value) {
            addCriterion("LOGINNAME <=", value, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameLike(String value) {
            addCriterion("LOGINNAME like", value, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameNotLike(String value) {
            addCriterion("LOGINNAME not like", value, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameIn(List<String> values) {
            addCriterion("LOGINNAME in", values, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameNotIn(List<String> values) {
            addCriterion("LOGINNAME not in", values, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameBetween(String value1, String value2) {
            addCriterion("LOGINNAME between", value1, value2, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameNotBetween(String value1, String value2) {
            addCriterion("LOGINNAME not between", value1, value2, "loginname");
            return (Criteria) this;
        }

        public Criteria andActionDtIsNull() {
            addCriterion("ACTION_DT is null");
            return (Criteria) this;
        }

        public Criteria andActionDtIsNotNull() {
            addCriterion("ACTION_DT is not null");
            return (Criteria) this;
        }

        public Criteria andActionDtEqualTo(Date value) {
            addCriterionForJDBCDate("ACTION_DT =", value, "actionDt");
            return (Criteria) this;
        }

        public Criteria andActionDtNotEqualTo(Date value) {
            addCriterionForJDBCDate("ACTION_DT <>", value, "actionDt");
            return (Criteria) this;
        }

        public Criteria andActionDtGreaterThan(Date value) {
            addCriterionForJDBCDate("ACTION_DT >", value, "actionDt");
            return (Criteria) this;
        }

        public Criteria andActionDtGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ACTION_DT >=", value, "actionDt");
            return (Criteria) this;
        }

        public Criteria andActionDtLessThan(Date value) {
            addCriterionForJDBCDate("ACTION_DT <", value, "actionDt");
            return (Criteria) this;
        }

        public Criteria andActionDtLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ACTION_DT <=", value, "actionDt");
            return (Criteria) this;
        }

        public Criteria andActionDtIn(List<Date> values) {
            addCriterionForJDBCDate("ACTION_DT in", values, "actionDt");
            return (Criteria) this;
        }

        public Criteria andActionDtNotIn(List<Date> values) {
            addCriterionForJDBCDate("ACTION_DT not in", values, "actionDt");
            return (Criteria) this;
        }

        public Criteria andActionDtBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ACTION_DT between", value1, value2, "actionDt");
            return (Criteria) this;
        }

        public Criteria andActionDtNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ACTION_DT not between", value1, value2, "actionDt");
            return (Criteria) this;
        }

        public Criteria andActionIsNull() {
            addCriterion("ACTION is null");
            return (Criteria) this;
        }

        public Criteria andActionIsNotNull() {
            addCriterion("ACTION is not null");
            return (Criteria) this;
        }

        public Criteria andActionEqualTo(String value) {
            addCriterion("ACTION =", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionNotEqualTo(String value) {
            addCriterion("ACTION <>", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionGreaterThan(String value) {
            addCriterion("ACTION >", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionGreaterThanOrEqualTo(String value) {
            addCriterion("ACTION >=", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionLessThan(String value) {
            addCriterion("ACTION <", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionLessThanOrEqualTo(String value) {
            addCriterion("ACTION <=", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionLike(String value) {
            addCriterion("ACTION like", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionNotLike(String value) {
            addCriterion("ACTION not like", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionIn(List<String> values) {
            addCriterion("ACTION in", values, "action");
            return (Criteria) this;
        }

        public Criteria andActionNotIn(List<String> values) {
            addCriterion("ACTION not in", values, "action");
            return (Criteria) this;
        }

        public Criteria andActionBetween(String value1, String value2) {
            addCriterion("ACTION between", value1, value2, "action");
            return (Criteria) this;
        }

        public Criteria andActionNotBetween(String value1, String value2) {
            addCriterion("ACTION not between", value1, value2, "action");
            return (Criteria) this;
        }

        public Criteria andClobcontentidIsNull() {
            addCriterion("CLOBCONTENTID is null");
            return (Criteria) this;
        }

        public Criteria andClobcontentidIsNotNull() {
            addCriterion("CLOBCONTENTID is not null");
            return (Criteria) this;
        }

        public Criteria andClobcontentidEqualTo(Long value) {
            addCriterion("CLOBCONTENTID =", value, "clobcontentid");
            return (Criteria) this;
        }

        public Criteria andClobcontentidNotEqualTo(Long value) {
            addCriterion("CLOBCONTENTID <>", value, "clobcontentid");
            return (Criteria) this;
        }

        public Criteria andClobcontentidGreaterThan(Long value) {
            addCriterion("CLOBCONTENTID >", value, "clobcontentid");
            return (Criteria) this;
        }

        public Criteria andClobcontentidGreaterThanOrEqualTo(Long value) {
            addCriterion("CLOBCONTENTID >=", value, "clobcontentid");
            return (Criteria) this;
        }

        public Criteria andClobcontentidLessThan(Long value) {
            addCriterion("CLOBCONTENTID <", value, "clobcontentid");
            return (Criteria) this;
        }

        public Criteria andClobcontentidLessThanOrEqualTo(Long value) {
            addCriterion("CLOBCONTENTID <=", value, "clobcontentid");
            return (Criteria) this;
        }

        public Criteria andClobcontentidIn(List<Long> values) {
            addCriterion("CLOBCONTENTID in", values, "clobcontentid");
            return (Criteria) this;
        }

        public Criteria andClobcontentidNotIn(List<Long> values) {
            addCriterion("CLOBCONTENTID not in", values, "clobcontentid");
            return (Criteria) this;
        }

        public Criteria andClobcontentidBetween(Long value1, Long value2) {
            addCriterion("CLOBCONTENTID between", value1, value2, "clobcontentid");
            return (Criteria) this;
        }

        public Criteria andClobcontentidNotBetween(Long value1, Long value2) {
            addCriterion("CLOBCONTENTID not between", value1, value2, "clobcontentid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ACTIONLOG
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ACTIONLOG
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}