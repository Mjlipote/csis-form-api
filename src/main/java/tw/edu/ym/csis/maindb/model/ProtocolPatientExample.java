package tw.edu.ym.csis.maindb.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ProtocolPatientExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    public ProtocolPatientExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andPatientidIsNull() {
            addCriterion("PATIENTID is null");
            return (Criteria) this;
        }

        public Criteria andPatientidIsNotNull() {
            addCriterion("PATIENTID is not null");
            return (Criteria) this;
        }

        public Criteria andPatientidEqualTo(Long value) {
            addCriterion("PATIENTID =", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidNotEqualTo(Long value) {
            addCriterion("PATIENTID <>", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidGreaterThan(Long value) {
            addCriterion("PATIENTID >", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidGreaterThanOrEqualTo(Long value) {
            addCriterion("PATIENTID >=", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidLessThan(Long value) {
            addCriterion("PATIENTID <", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidLessThanOrEqualTo(Long value) {
            addCriterion("PATIENTID <=", value, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidIn(List<Long> values) {
            addCriterion("PATIENTID in", values, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidNotIn(List<Long> values) {
            addCriterion("PATIENTID not in", values, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidBetween(Long value1, Long value2) {
            addCriterion("PATIENTID between", value1, value2, "patientid");
            return (Criteria) this;
        }

        public Criteria andPatientidNotBetween(Long value1, Long value2) {
            addCriterion("PATIENTID not between", value1, value2, "patientid");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusIsNull() {
            addCriterion("ENROLL_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusIsNotNull() {
            addCriterion("ENROLL_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusEqualTo(String value) {
            addCriterion("ENROLL_STATUS =", value, "enrollStatus");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusNotEqualTo(String value) {
            addCriterion("ENROLL_STATUS <>", value, "enrollStatus");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusGreaterThan(String value) {
            addCriterion("ENROLL_STATUS >", value, "enrollStatus");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusGreaterThanOrEqualTo(String value) {
            addCriterion("ENROLL_STATUS >=", value, "enrollStatus");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusLessThan(String value) {
            addCriterion("ENROLL_STATUS <", value, "enrollStatus");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusLessThanOrEqualTo(String value) {
            addCriterion("ENROLL_STATUS <=", value, "enrollStatus");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusLike(String value) {
            addCriterion("ENROLL_STATUS like", value, "enrollStatus");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusNotLike(String value) {
            addCriterion("ENROLL_STATUS not like", value, "enrollStatus");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusIn(List<String> values) {
            addCriterion("ENROLL_STATUS in", values, "enrollStatus");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusNotIn(List<String> values) {
            addCriterion("ENROLL_STATUS not in", values, "enrollStatus");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusBetween(String value1, String value2) {
            addCriterion("ENROLL_STATUS between", value1, value2, "enrollStatus");
            return (Criteria) this;
        }

        public Criteria andEnrollStatusNotBetween(String value1, String value2) {
            addCriterion("ENROLL_STATUS not between", value1, value2, "enrollStatus");
            return (Criteria) this;
        }

        public Criteria andEnrollDecisionDateIsNull() {
            addCriterion("ENROLL_DECISION_DATE is null");
            return (Criteria) this;
        }

        public Criteria andEnrollDecisionDateIsNotNull() {
            addCriterion("ENROLL_DECISION_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andEnrollDecisionDateEqualTo(Date value) {
            addCriterionForJDBCDate("ENROLL_DECISION_DATE =", value, "enrollDecisionDate");
            return (Criteria) this;
        }

        public Criteria andEnrollDecisionDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("ENROLL_DECISION_DATE <>", value, "enrollDecisionDate");
            return (Criteria) this;
        }

        public Criteria andEnrollDecisionDateGreaterThan(Date value) {
            addCriterionForJDBCDate("ENROLL_DECISION_DATE >", value, "enrollDecisionDate");
            return (Criteria) this;
        }

        public Criteria andEnrollDecisionDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ENROLL_DECISION_DATE >=", value, "enrollDecisionDate");
            return (Criteria) this;
        }

        public Criteria andEnrollDecisionDateLessThan(Date value) {
            addCriterionForJDBCDate("ENROLL_DECISION_DATE <", value, "enrollDecisionDate");
            return (Criteria) this;
        }

        public Criteria andEnrollDecisionDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ENROLL_DECISION_DATE <=", value, "enrollDecisionDate");
            return (Criteria) this;
        }

        public Criteria andEnrollDecisionDateIn(List<Date> values) {
            addCriterionForJDBCDate("ENROLL_DECISION_DATE in", values, "enrollDecisionDate");
            return (Criteria) this;
        }

        public Criteria andEnrollDecisionDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("ENROLL_DECISION_DATE not in", values, "enrollDecisionDate");
            return (Criteria) this;
        }

        public Criteria andEnrollDecisionDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ENROLL_DECISION_DATE between", value1, value2, "enrollDecisionDate");
            return (Criteria) this;
        }

        public Criteria andEnrollDecisionDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ENROLL_DECISION_DATE not between", value1, value2, "enrollDecisionDate");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgIsNull() {
            addCriterion("ELIGIBILITY_FLG is null");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgIsNotNull() {
            addCriterion("ELIGIBILITY_FLG is not null");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgEqualTo(String value) {
            addCriterion("ELIGIBILITY_FLG =", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgNotEqualTo(String value) {
            addCriterion("ELIGIBILITY_FLG <>", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgGreaterThan(String value) {
            addCriterion("ELIGIBILITY_FLG >", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgGreaterThanOrEqualTo(String value) {
            addCriterion("ELIGIBILITY_FLG >=", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgLessThan(String value) {
            addCriterion("ELIGIBILITY_FLG <", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgLessThanOrEqualTo(String value) {
            addCriterion("ELIGIBILITY_FLG <=", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgLike(String value) {
            addCriterion("ELIGIBILITY_FLG like", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgNotLike(String value) {
            addCriterion("ELIGIBILITY_FLG not like", value, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgIn(List<String> values) {
            addCriterion("ELIGIBILITY_FLG in", values, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgNotIn(List<String> values) {
            addCriterion("ELIGIBILITY_FLG not in", values, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgBetween(String value1, String value2) {
            addCriterion("ELIGIBILITY_FLG between", value1, value2, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andEligibilityFlgNotBetween(String value1, String value2) {
            addCriterion("ELIGIBILITY_FLG not between", value1, value2, "eligibilityFlg");
            return (Criteria) this;
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProtocolidIsNull() {
            addCriterion("PROTOCOLID is null");
            return (Criteria) this;
        }

        public Criteria andProtocolidIsNotNull() {
            addCriterion("PROTOCOLID is not null");
            return (Criteria) this;
        }

        public Criteria andProtocolidEqualTo(Long value) {
            addCriterion("PROTOCOLID =", value, "protocolid");
            return (Criteria) this;
        }

        public Criteria andProtocolidNotEqualTo(Long value) {
            addCriterion("PROTOCOLID <>", value, "protocolid");
            return (Criteria) this;
        }

        public Criteria andProtocolidGreaterThan(Long value) {
            addCriterion("PROTOCOLID >", value, "protocolid");
            return (Criteria) this;
        }

        public Criteria andProtocolidGreaterThanOrEqualTo(Long value) {
            addCriterion("PROTOCOLID >=", value, "protocolid");
            return (Criteria) this;
        }

        public Criteria andProtocolidLessThan(Long value) {
            addCriterion("PROTOCOLID <", value, "protocolid");
            return (Criteria) this;
        }

        public Criteria andProtocolidLessThanOrEqualTo(Long value) {
            addCriterion("PROTOCOLID <=", value, "protocolid");
            return (Criteria) this;
        }

        public Criteria andProtocolidIn(List<Long> values) {
            addCriterion("PROTOCOLID in", values, "protocolid");
            return (Criteria) this;
        }

        public Criteria andProtocolidNotIn(List<Long> values) {
            addCriterion("PROTOCOLID not in", values, "protocolid");
            return (Criteria) this;
        }

        public Criteria andProtocolidBetween(Long value1, Long value2) {
            addCriterion("PROTOCOLID between", value1, value2, "protocolid");
            return (Criteria) this;
        }

        public Criteria andProtocolidNotBetween(Long value1, Long value2) {
            addCriterion("PROTOCOLID not between", value1, value2, "protocolid");
            return (Criteria) this;
        }

        public Criteria andSiteidIsNull() {
            addCriterion("SITEID is null");
            return (Criteria) this;
        }

        public Criteria andSiteidIsNotNull() {
            addCriterion("SITEID is not null");
            return (Criteria) this;
        }

        public Criteria andSiteidEqualTo(Long value) {
            addCriterion("SITEID =", value, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidNotEqualTo(Long value) {
            addCriterion("SITEID <>", value, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidGreaterThan(Long value) {
            addCriterion("SITEID >", value, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidGreaterThanOrEqualTo(Long value) {
            addCriterion("SITEID >=", value, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidLessThan(Long value) {
            addCriterion("SITEID <", value, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidLessThanOrEqualTo(Long value) {
            addCriterion("SITEID <=", value, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidIn(List<Long> values) {
            addCriterion("SITEID in", values, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidNotIn(List<Long> values) {
            addCriterion("SITEID not in", values, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidBetween(Long value1, Long value2) {
            addCriterion("SITEID between", value1, value2, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidNotBetween(Long value1, Long value2) {
            addCriterion("SITEID not between", value1, value2, "siteid");
            return (Criteria) this;
        }

        public Criteria andEnrollPersonidIsNull() {
            addCriterion("ENROLL_PERSONID is null");
            return (Criteria) this;
        }

        public Criteria andEnrollPersonidIsNotNull() {
            addCriterion("ENROLL_PERSONID is not null");
            return (Criteria) this;
        }

        public Criteria andEnrollPersonidEqualTo(Long value) {
            addCriterion("ENROLL_PERSONID =", value, "enrollPersonid");
            return (Criteria) this;
        }

        public Criteria andEnrollPersonidNotEqualTo(Long value) {
            addCriterion("ENROLL_PERSONID <>", value, "enrollPersonid");
            return (Criteria) this;
        }

        public Criteria andEnrollPersonidGreaterThan(Long value) {
            addCriterion("ENROLL_PERSONID >", value, "enrollPersonid");
            return (Criteria) this;
        }

        public Criteria andEnrollPersonidGreaterThanOrEqualTo(Long value) {
            addCriterion("ENROLL_PERSONID >=", value, "enrollPersonid");
            return (Criteria) this;
        }

        public Criteria andEnrollPersonidLessThan(Long value) {
            addCriterion("ENROLL_PERSONID <", value, "enrollPersonid");
            return (Criteria) this;
        }

        public Criteria andEnrollPersonidLessThanOrEqualTo(Long value) {
            addCriterion("ENROLL_PERSONID <=", value, "enrollPersonid");
            return (Criteria) this;
        }

        public Criteria andEnrollPersonidIn(List<Long> values) {
            addCriterion("ENROLL_PERSONID in", values, "enrollPersonid");
            return (Criteria) this;
        }

        public Criteria andEnrollPersonidNotIn(List<Long> values) {
            addCriterion("ENROLL_PERSONID not in", values, "enrollPersonid");
            return (Criteria) this;
        }

        public Criteria andEnrollPersonidBetween(Long value1, Long value2) {
            addCriterion("ENROLL_PERSONID between", value1, value2, "enrollPersonid");
            return (Criteria) this;
        }

        public Criteria andEnrollPersonidNotBetween(Long value1, Long value2) {
            addCriterion("ENROLL_PERSONID not between", value1, value2, "enrollPersonid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PROTOCOL_PATIENT
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}