package tw.edu.ym.csis.maindb.model;

import java.util.ArrayList;
import java.util.List;

public class SavedQueryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    public SavedQueryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDcpidIsNull() {
            addCriterion("DCPID is null");
            return (Criteria) this;
        }

        public Criteria andDcpidIsNotNull() {
            addCriterion("DCPID is not null");
            return (Criteria) this;
        }

        public Criteria andDcpidEqualTo(Long value) {
            addCriterion("DCPID =", value, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidNotEqualTo(Long value) {
            addCriterion("DCPID <>", value, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidGreaterThan(Long value) {
            addCriterion("DCPID >", value, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidGreaterThanOrEqualTo(Long value) {
            addCriterion("DCPID >=", value, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidLessThan(Long value) {
            addCriterion("DCPID <", value, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidLessThanOrEqualTo(Long value) {
            addCriterion("DCPID <=", value, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidIn(List<Long> values) {
            addCriterion("DCPID in", values, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidNotIn(List<Long> values) {
            addCriterion("DCPID not in", values, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidBetween(Long value1, Long value2) {
            addCriterion("DCPID between", value1, value2, "dcpid");
            return (Criteria) this;
        }

        public Criteria andDcpidNotBetween(Long value1, Long value2) {
            addCriterion("DCPID not between", value1, value2, "dcpid");
            return (Criteria) this;
        }

        public Criteria andOwneridIsNull() {
            addCriterion("OWNERID is null");
            return (Criteria) this;
        }

        public Criteria andOwneridIsNotNull() {
            addCriterion("OWNERID is not null");
            return (Criteria) this;
        }

        public Criteria andOwneridEqualTo(Long value) {
            addCriterion("OWNERID =", value, "ownerid");
            return (Criteria) this;
        }

        public Criteria andOwneridNotEqualTo(Long value) {
            addCriterion("OWNERID <>", value, "ownerid");
            return (Criteria) this;
        }

        public Criteria andOwneridGreaterThan(Long value) {
            addCriterion("OWNERID >", value, "ownerid");
            return (Criteria) this;
        }

        public Criteria andOwneridGreaterThanOrEqualTo(Long value) {
            addCriterion("OWNERID >=", value, "ownerid");
            return (Criteria) this;
        }

        public Criteria andOwneridLessThan(Long value) {
            addCriterion("OWNERID <", value, "ownerid");
            return (Criteria) this;
        }

        public Criteria andOwneridLessThanOrEqualTo(Long value) {
            addCriterion("OWNERID <=", value, "ownerid");
            return (Criteria) this;
        }

        public Criteria andOwneridIn(List<Long> values) {
            addCriterion("OWNERID in", values, "ownerid");
            return (Criteria) this;
        }

        public Criteria andOwneridNotIn(List<Long> values) {
            addCriterion("OWNERID not in", values, "ownerid");
            return (Criteria) this;
        }

        public Criteria andOwneridBetween(Long value1, Long value2) {
            addCriterion("OWNERID between", value1, value2, "ownerid");
            return (Criteria) this;
        }

        public Criteria andOwneridNotBetween(Long value1, Long value2) {
            addCriterion("OWNERID not between", value1, value2, "ownerid");
            return (Criteria) this;
        }

        public Criteria andQuerynameIsNull() {
            addCriterion("QUERYNAME is null");
            return (Criteria) this;
        }

        public Criteria andQuerynameIsNotNull() {
            addCriterion("QUERYNAME is not null");
            return (Criteria) this;
        }

        public Criteria andQuerynameEqualTo(String value) {
            addCriterion("QUERYNAME =", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameNotEqualTo(String value) {
            addCriterion("QUERYNAME <>", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameGreaterThan(String value) {
            addCriterion("QUERYNAME >", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameGreaterThanOrEqualTo(String value) {
            addCriterion("QUERYNAME >=", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameLessThan(String value) {
            addCriterion("QUERYNAME <", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameLessThanOrEqualTo(String value) {
            addCriterion("QUERYNAME <=", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameLike(String value) {
            addCriterion("QUERYNAME like", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameNotLike(String value) {
            addCriterion("QUERYNAME not like", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameIn(List<String> values) {
            addCriterion("QUERYNAME in", values, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameNotIn(List<String> values) {
            addCriterion("QUERYNAME not in", values, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameBetween(String value1, String value2) {
            addCriterion("QUERYNAME between", value1, value2, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameNotBetween(String value1, String value2) {
            addCriterion("QUERYNAME not between", value1, value2, "queryname");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SAVEDQUERY
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}