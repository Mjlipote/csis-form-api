package tw.edu.ym.csis.metadb.model;

import java.util.ArrayList;
import java.util.List;

public class DatatypeMapExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    public DatatypeMapExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("TYPE is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("TYPE =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("TYPE <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("TYPE >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("TYPE >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("TYPE <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("TYPE <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("TYPE like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("TYPE not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("TYPE in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("TYPE not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("TYPE between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("TYPE not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andOracletypeIsNull() {
            addCriterion("ORACLETYPE is null");
            return (Criteria) this;
        }

        public Criteria andOracletypeIsNotNull() {
            addCriterion("ORACLETYPE is not null");
            return (Criteria) this;
        }

        public Criteria andOracletypeEqualTo(String value) {
            addCriterion("ORACLETYPE =", value, "oracletype");
            return (Criteria) this;
        }

        public Criteria andOracletypeNotEqualTo(String value) {
            addCriterion("ORACLETYPE <>", value, "oracletype");
            return (Criteria) this;
        }

        public Criteria andOracletypeGreaterThan(String value) {
            addCriterion("ORACLETYPE >", value, "oracletype");
            return (Criteria) this;
        }

        public Criteria andOracletypeGreaterThanOrEqualTo(String value) {
            addCriterion("ORACLETYPE >=", value, "oracletype");
            return (Criteria) this;
        }

        public Criteria andOracletypeLessThan(String value) {
            addCriterion("ORACLETYPE <", value, "oracletype");
            return (Criteria) this;
        }

        public Criteria andOracletypeLessThanOrEqualTo(String value) {
            addCriterion("ORACLETYPE <=", value, "oracletype");
            return (Criteria) this;
        }

        public Criteria andOracletypeLike(String value) {
            addCriterion("ORACLETYPE like", value, "oracletype");
            return (Criteria) this;
        }

        public Criteria andOracletypeNotLike(String value) {
            addCriterion("ORACLETYPE not like", value, "oracletype");
            return (Criteria) this;
        }

        public Criteria andOracletypeIn(List<String> values) {
            addCriterion("ORACLETYPE in", values, "oracletype");
            return (Criteria) this;
        }

        public Criteria andOracletypeNotIn(List<String> values) {
            addCriterion("ORACLETYPE not in", values, "oracletype");
            return (Criteria) this;
        }

        public Criteria andOracletypeBetween(String value1, String value2) {
            addCriterion("ORACLETYPE between", value1, value2, "oracletype");
            return (Criteria) this;
        }

        public Criteria andOracletypeNotBetween(String value1, String value2) {
            addCriterion("ORACLETYPE not between", value1, value2, "oracletype");
            return (Criteria) this;
        }

        public Criteria andXmltypeIsNull() {
            addCriterion("XMLTYPE is null");
            return (Criteria) this;
        }

        public Criteria andXmltypeIsNotNull() {
            addCriterion("XMLTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andXmltypeEqualTo(String value) {
            addCriterion("XMLTYPE =", value, "xmltype");
            return (Criteria) this;
        }

        public Criteria andXmltypeNotEqualTo(String value) {
            addCriterion("XMLTYPE <>", value, "xmltype");
            return (Criteria) this;
        }

        public Criteria andXmltypeGreaterThan(String value) {
            addCriterion("XMLTYPE >", value, "xmltype");
            return (Criteria) this;
        }

        public Criteria andXmltypeGreaterThanOrEqualTo(String value) {
            addCriterion("XMLTYPE >=", value, "xmltype");
            return (Criteria) this;
        }

        public Criteria andXmltypeLessThan(String value) {
            addCriterion("XMLTYPE <", value, "xmltype");
            return (Criteria) this;
        }

        public Criteria andXmltypeLessThanOrEqualTo(String value) {
            addCriterion("XMLTYPE <=", value, "xmltype");
            return (Criteria) this;
        }

        public Criteria andXmltypeLike(String value) {
            addCriterion("XMLTYPE like", value, "xmltype");
            return (Criteria) this;
        }

        public Criteria andXmltypeNotLike(String value) {
            addCriterion("XMLTYPE not like", value, "xmltype");
            return (Criteria) this;
        }

        public Criteria andXmltypeIn(List<String> values) {
            addCriterion("XMLTYPE in", values, "xmltype");
            return (Criteria) this;
        }

        public Criteria andXmltypeNotIn(List<String> values) {
            addCriterion("XMLTYPE not in", values, "xmltype");
            return (Criteria) this;
        }

        public Criteria andXmltypeBetween(String value1, String value2) {
            addCriterion("XMLTYPE between", value1, value2, "xmltype");
            return (Criteria) this;
        }

        public Criteria andXmltypeNotBetween(String value1, String value2) {
            addCriterion("XMLTYPE not between", value1, value2, "xmltype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DATATYPEMAP
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}